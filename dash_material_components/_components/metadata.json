{
  "src/components/inputs/autocomplete/Autocomplete.js": {
    "description": "A self contained Accordion component. Build up the children using the\nAccordionItem component.",
    "displayName": "Autocomplete",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "options": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.oneOfType([\n  /**\n   * Array of options where the label and the value are the same thing -\n   * [string|number]\n   */\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  /**\n   * An array of options {label: [string|number], value: [string|number]},\n   * an optional disabled field can be used for each option\n   */\n  PropTypes.arrayOf(\n    PropTypes.exact({\n      /**\n       * The options's label\n       */\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired,\n\n      /**\n       * The options's id.\n       */\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired\n    })\n  )\n])"
        },
        "required": false,
        "description": "Array of options."
      },
      "autoComplete": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the portion of the selected suggestion that has not been \ntyped by the user, known as the completion string, appears inline \nafter the input cursor in the textbox. The inline completion string \nis visually highlighted and has a selected state.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoHighlight": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the first option is automatically highlighted.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoSelect": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the selected option becomes the value of the input when \nthe Autocomplete loses focus unless the user chooses a different \noption or changes the character string in the input.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disablePortal": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the Popper content will be under the DOM hierarchy of the parent component.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "sx": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.object"
        },
        "required": false,
        "description": "The system prop that allows defining system overrides as well as additional CSS styles. \nSee the https://mui.com/system/getting-started/the-sx-prop/ page for more details."
      }
    }
  },
  "src/components/inputs/button/Button.js": {
    "description": "",
    "displayName": "Button",
    "methods": [],
    "props": {
      "disabled": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the component is disabled.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disableElevation": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, no elevation is used.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disableFocusRipple": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the keyboard focus ripple is disabled.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disableRipple": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the ripple effect is disabled.\nWithout a ripple there is no styling for :focus-visible by default. \nBe sure to highlight the element by applying separate styles with the .Mui-focusVisible class.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "fullWidth": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the button will take up the full width of its container.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "sx": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.object"
        },
        "required": false,
        "description": "The system prop that allows defining system overrides as well as additional CSS styles. \nSee the https://mui.com/system/getting-started/the-sx-prop/ page for more details."
      },
      "variant": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The variant to use.",
        "defaultValue": {
          "value": "\"text\"",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The color of the component. It supports both default and custom theme colors,\nwhich can be added as shown in the https://mui.com/material-ui/customization/palette/#adding-new-colors.",
        "defaultValue": {
          "value": "\"primary\"",
          "computed": false
        }
      },
      "btnValue": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "it shows the button text",
        "defaultValue": {
          "value": "\"\"",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "children": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.node"
        },
        "required": false,
        "description": "The content of the component."
      },
      "classes": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.object"
        },
        "required": false,
        "description": "Override or extend the styles applied to the component. See https://mui.com/material-ui/api/button/#css below for more details."
      },
      "component": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.node"
        },
        "required": false,
        "description": "The component used for the root node. Either a string to use a HTML element or a component."
      },
      "endIcon": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.node"
        },
        "required": false,
        "description": "Element placed after the children."
      },
      "href": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The URL to link to when the button is clicked. If defined, an a element will be used as the root node."
      },
      "size": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The size of the component. small is equivalent to the dense button styling.",
        "defaultValue": {
          "value": "\"medium\"",
          "computed": false
        }
      },
      "startIcon": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.node"
        },
        "required": false,
        "description": "Element placed before the children."
      }
    }
  },
  "src/components/inputs/checkbox/checbox.js": {
    "description": "A self contained Accordion component. Build up the children using the\nAccordionItem component.",
    "displayName": "Checkbox",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.string"
        },
        "required": false,
        "description": "The ID of this component, used to identify dash components\nin callbacks. The ID needs to be unique across all of the\ncomponents in an app."
      },
      "options": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.oneOfType([\n  /**\n   * Array of options where the label and the value are the same thing -\n   * [string|number]\n   */\n  PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  /**\n   * An array of options {label: [string|number], value: [string|number]},\n   * an optional disabled field can be used for each option\n   */\n  PropTypes.arrayOf(\n    PropTypes.exact({\n      /**\n       * The options's label\n       */\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired,\n\n      /**\n       * The options's id.\n       */\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n      .isRequired\n    })\n  )\n])"
        },
        "required": false,
        "description": "Array of options."
      },
      "autoComplete": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the portion of the selected suggestion that has not been \ntyped by the user, known as the completion string, appears inline \nafter the input cursor in the textbox. The inline completion string \nis visually highlighted and has a selected state.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoHighlight": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the first option is automatically highlighted.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoSelect": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the selected option becomes the value of the input when \nthe Autocomplete loses focus unless the user chooses a different \noption or changes the character string in the input.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "disablePortal": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.bool"
        },
        "required": false,
        "description": "If true, the Popper content will be under the DOM hierarchy of the parent component.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "sx": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.object"
        },
        "required": false,
        "description": "The system prop that allows defining system overrides as well as additional CSS styles. \nSee the https://mui.com/system/getting-started/the-sx-prop/ page for more details."
      }
    }
  }
}